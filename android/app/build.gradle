plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode", "1")
def flutterVersionName = localProperties.getProperty("flutter.versionName", "1.0")

android {
    namespace = "com.example.student_attendance"
    compileSdkVersion 35
    ndkVersion = flutter.ndkVersion

     compileOptions {
        sourceCompatibility JavaVersion.VERSION_17  // ✅ Ensure Java 17
        targetCompatibility JavaVersion.VERSION_17  // ✅ Ensure Java 17
    }

    kotlinOptions {
        jvmTarget = "17"  // ✅ Ensure Kotlin uses Java 17
    }
    defaultConfig {
        applicationId = "com.example.student_attendance"
        minSdkVersion 23
        targetSdkVersion 35
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            signingConfig = signingConfigs.debug
        }
    }
    buildFeatures {
        viewBinding true
    }
}

flutter {
    source = "../.."
}

// ✅ Add this section to resolve Kotlin dependency conflicts
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.22"
}


// ✅ Ensure Kotlin versions are consistent
configurations.all {
    resolutionStrategy {
        force "org.jetbrains.kotlin:kotlin-stdlib:1.8.22"
        force "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.22"
        force "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.22"
    }
}
